#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
#     ||          ____  _ __
#  +------+      / __ )(_) /_______________ _____  ___
#  | 0xBC |     / __  / / __/ ___/ ___/ __ `/_  / / _ \
#  +------+    / /_/ / / /_/ /__/ /  / /_/ / / /_/  __/
#   ||  ||    /_____/_/\__/\___/_/   \__,_/ /___/\___/
#
#  Copyright (C) 2019 Bitcraze AB
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA  02110-1301, USA.
"""
Simple example of a synchronized swarm choreography using the High level
commander.
The swarm takes off and flies a synchronous choreography before landing.
The take-of is relative to the start position but the Goto are absolute.
The sequence contains a list of commands to be executed at each step.
This example is intended to work with any absolute positioning system.
It aims at documenting how to use the High Level Commander together with
the Swarm class to achieve synchronous sequences.
"""
import threading
import time
from collections import namedtuple
from queue import Queue

import cflib.crtp
from cflib.crazyflie.log import LogConfig
from cflib.crazyflie.swarm import CachedCfFactory
from cflib.crazyflie.swarm import Swarm

from cflib.crazyflie.syncLogger import SyncLogger

import os

# Time for one step in second
STEP_TIME = 0.333

# Possible commands, all times are in seconds
Takeoff = namedtuple('Takeoff', ['height', 'time'])
Land = namedtuple('Land', ['time'])
Goto = namedtuple('Goto', ['x', 'y', 'z', 'time'])
# RGB [0-255], Intensity [0.0-1.0]
Ring = namedtuple('Ring', ['r', 'g', 'b', 'intensity', 'time'])
# Reserved for the control loop, do not use in sequence
Quit = namedtuple('Quit', [])

uris = [
    'radio://0/80/2M/E7E7E7E7E1',
    'radio://0/80/2M/E7E7E7E7E2',
    'radio://0/80/2M/E7E7E7E7E3',
    'radio://0/80/2M/E7E7E7E7E4',
    'radio://0/80/2M/E7E7E7E7E5',
    #'radio://0/80/2M/E7E7E7E7E6',
    #'radio://0/80/2M/E7E7E7E7E7',
    'radio://0/70/2M/E7E7E7E7E1',
    'radio://0/70/2M/E7E7E7E7E2',
    'radio://0/70/2M/E7E7E7E7E3',
    'radio://0/70/2M/E7E7E7E7E4',
    'radio://0/70/2M/E7E7E7E7E5',
    'radio://0/70/2M/E7E7E7E7E6',
    #'radio://0/70/2M/E7E7E7E7E7',
]

sequence_init = [
    # Step, CF_id,  action
    (0,    0,      Ring(0, 0, 0, 0.1, 0)),


]

sequence_ledtest = [
    (0,    0,      Ring(0, 0, 0, 0.1, 0)),
    (0,    1,      Ring(0, 0, 0, 0.1, 0)),
    (0,    2,      Ring(0, 0, 0, 0.1, 0)),
    (0,    3,      Ring(0, 0, 0, 0.1, 0)),
    (0,    4,      Ring(0, 0, 0, 0.1, 0)),
    (0,    5,      Ring(0, 0, 0, 0.1, 0)),
    (0,    6,      Ring(0, 0, 0, 0.1, 0)),
    (0,    7,      Ring(0, 0, 0, 0.1, 0)),
    (0,    8,      Ring(0, 0, 0, 0.1, 0)),
    (0,    9,      Ring(0, 0, 0, 0.1, 0)),

 
]

sequence_takeoff = [
    (0,    0,      Takeoff(1.5, 3)),
    (1,    1,      Takeoff(1.5, 3)),
    (2,    2,      Takeoff(1.5, 3)),
    (3,    3,      Takeoff(1.5, 3)),
    (4,    4,      Takeoff(1.5, 3)),
    (5,    5,      Takeoff(1.5, 3)),
    (6,    6,      Takeoff(1.5, 3)),
    (7,    7,      Takeoff(1.5, 3)),
    (8,    8,      Takeoff(1.5, 3)),
    (9,    9,      Takeoff(1.5, 3)),
    (10,    10,      Takeoff(1.5, 3)),
    
    


]

sequence_land = [
    (0,    0,      Land(3)),
    (0,    1,      Land(3)),
    (0,    2,      Land(3)),
    (0,    3,      Land(3)),
    (0,    4,      Land(3)),
    (0,    5,      Land(3)),
    (0,    6,      Land(3)),
    (0,    7,      Land(3)),
    (0,    8,      Land(3)),
    (0,    9,      Land(3)),
    (0,   10,      Land(3)),


]
sequence_start=[
    (0, 0, Goto(0.47 ,0.23 ,1.0 ,1)),#80 1
    (0, 1, Goto(0.23 ,0.47 ,1.0 ,1)),#80 2
    (0, 2, Goto(-0.05 ,0.73 ,1.0 ,1)),#80 3
    (0, 3, Goto(-0.3 ,0.45 ,1.0 ,1)),#80 4
    (0, 4, Goto(-0.53 ,0.15 ,1.0 ,1)),#80 5
    (0, 5, Goto(-0.53 ,-0.23 ,1.0 ,1)),#70 1
    (0, 6, Goto(-0.28 ,-0.53 ,1.0 ,1)),#70 2
    (0, 7, Goto(-0.08 ,-0.78 ,1.0 ,1)),#70 3
    (0, 8, Goto(0.23 ,-0.55 ,1.0 ,1)),#70 4
    (0, 9, Goto(0.47 ,-0.2 ,1.0 ,1)),#70 5
    (0, 10, Goto(0.0 ,-0.03 ,1.0 ,1)),#70 6
    (0, 0, Ring(255, 255, 255, 1, 0)),
    (0, 1, Ring(255, 255, 255, 1, 0)),
    (0, 2, Ring(255, 255, 255, 1, 0)),
    (0, 3, Ring(255, 255, 255, 1, 0)),
    (0, 4, Ring(255, 255, 255, 1, 0)),
    (0, 5, Ring(255, 255, 255, 1, 0)),
    (0, 6, Ring(255, 255, 255, 1, 0)),
    (0, 7, Ring(255, 255, 255, 1, 0)),
    (0, 8, Ring(255, 255, 255, 1, 0)),
    (0, 9, Ring(255, 255, 255, 1, 0)),
    (0, 10, Ring(255, 255, 255, 1, 0)),
]
sequence_30_same=[

]

sequence_dance=[

    (0, 0,  Ring(255,0,0,1.0,0)),
    (0, 1,  Ring(255,0,0,1.0,0)),
    (0, 2,  Ring(255,0,0,1.0,0)),
    (0, 3,  Ring(255,0,0,1.0,0)),
    (0, 4,  Ring(255,0,0,1.0,0)),
    (0, 5,  Ring(255,0,0,1.0,0)),
    (0, 6,  Ring(255,0,0,1.0,0)),
    (0, 7,  Ring(255,0,0,1.0,0)),
    (0, 8,  Ring(255,0,0,1.0,0)),
    (0, 9,  Ring(255,0,0,1.0,0)),
    (0, 10, Ring(255,255,255,1.0,0)),

    (0, 0, Goto(0.47 ,0.23 ,1.0 ,0.333)),
    (0, 1, Goto(0.23 ,0.47 ,1.0 ,0.333)),
    (0, 2, Goto(-0.05 ,0.73 ,1.0 ,0.333)),
    (0, 3, Goto(-0.3 ,0.45 ,1.0 ,0.333)),
    (0, 4, Goto(-0.53 ,0.15 ,1.0 ,0.333)),
    (0, 5, Goto(-0.53 ,-0.23 ,1.0 ,0.333)),
    (0, 6, Goto(-0.28 ,-0.53 ,1.0 ,0.333)),
    (0, 7, Goto(-0.08 ,-0.78 ,1.0 ,0.333)),
    (0, 8, Goto(0.23 ,-0.55 ,1.0 ,0.333)),
    (0, 10, Goto(0.0 ,-0.03 ,1.0 ,0.333)),
    (0, 9, Goto(0.47 ,-0.2 ,1.0 ,0.333)),
    (1, 0, Goto(0.35 ,0.17 ,1.0 ,0.333)),
    (1, 1, Goto(0.17 ,0.5 ,1.0 ,0.333)),
    (1, 2, Goto(-0.05 ,0.82 ,1.0 ,0.333)),
    (1, 3, Goto(-0.28 ,0.5 ,1.0 ,0.333)),
    (1, 4, Goto(-0.47 ,0.16 ,1.0 ,0.333)),
    (1, 5, Goto(-0.47 ,-0.21 ,1.0 ,0.333)),
    (1, 6, Goto(-0.28 ,-0.55 ,1.0 ,0.333)),
    (1, 7, Goto(-0.05 ,-0.85 ,1.0 ,0.333)),
    (1, 8, Goto(0.15 ,-0.55 ,1.0 ,0.333)),
    (1, 10, Goto(-0.05 ,-0.03 ,1.0 ,0.333)),
    (1, 9, Goto(0.35 ,-0.23 ,1.0 ,0.333)),
    (2, 0, Goto(0.58 ,0.17 ,1.0 ,0.333)),
    (2, 1, Goto(0.41 ,0.5 ,1.0 ,0.333)),
    (2, 2, Goto(0.18 ,0.82 ,1.0 ,0.333)),
    (2, 3, Goto(-0.04 ,0.5 ,1.0 ,0.333)),
    (2, 4, Goto(-0.24 ,0.16 ,1.0 ,0.333)),
    (2, 5, Goto(-0.24 ,-0.21 ,1.0 ,0.333)),
    (2, 6, Goto(-0.04 ,-0.55 ,1.0 ,0.333)),
    (2, 7, Goto(0.18 ,-0.85 ,1.0 ,0.333)),
    (2, 8, Goto(0.38 ,-0.55 ,1.0 ,0.333)),
    (2, 10, Goto(0.18 ,-0.03 ,1.0 ,0.333)),
    (2, 9, Goto(0.58 ,-0.23 ,1.0 ,0.333)),
    (3, 0, Goto(0.58 ,0.17 ,1.0 ,0.333)),
    (3, 1, Goto(0.41 ,0.5 ,1.0 ,0.333)),
    (3, 2, Goto(0.2 ,0.73 ,1.0 ,0.333)),
    (3, 3, Goto(-0.04 ,0.5 ,1.0 ,0.333)),
    (3, 4, Goto(-0.24 ,0.16 ,1.0 ,0.333)),
    (3, 5, Goto(-0.24 ,-0.21 ,1.0 ,0.333)),
    (3, 6, Goto(-0.04 ,-0.55 ,1.0 ,0.333)),
    (3, 7, Goto(0.17 ,-0.73 ,1.0 ,0.333)),
    (3, 8, Goto(0.38 ,-0.55 ,1.0 ,0.333)),
    (3, 10, Goto(0.18 ,-0.03 ,1.0 ,0.333)),
    (3, 9, Goto(0.58 ,-0.23 ,1.0 ,0.333)),
    (4, 0, Goto(0.58 ,0.05 ,1.0 ,0.333)),
    (4, 1, Goto(0.41 ,0.37 ,1.0 ,0.333)),
    (4, 2, Goto(0.2 ,0.6 ,1.0 ,0.333)),
    (4, 3, Goto(-0.04 ,0.37 ,1.0 ,0.333)),
    (4, 4, Goto(-0.24 ,0.03 ,1.0 ,0.333)),
    (4, 5, Goto(-0.24 ,-0.34 ,1.0 ,0.333)),
    (4, 6, Goto(-0.04 ,-0.68 ,1.0 ,0.333)),
    (4, 7, Goto(0.17 ,-0.85 ,1.0 ,0.333)),
    (4, 8, Goto(0.38 ,-0.68 ,1.0 ,0.333)),
    (4, 10, Goto(0.18 ,-0.15 ,1.0 ,0.333)),
    (4, 9, Goto(0.58 ,-0.35 ,1.0 ,0.333)),
    (5, 0, Goto(0.58 ,0.2 ,1.0 ,0.333)),
    (5, 1, Goto(0.41 ,0.52 ,1.0 ,0.333)),
    (5, 2, Goto(0.2 ,0.75 ,1.0 ,0.333)),
    (5, 3, Goto(-0.04 ,0.52 ,1.0 ,0.333)),
    (5, 4, Goto(-0.24 ,0.18 ,1.0 ,0.333)),
    (5, 5, Goto(-0.24 ,-0.19 ,1.0 ,0.333)),
    (5, 6, Goto(-0.04 ,-0.53 ,1.0 ,0.333)),
    (5, 7, Goto(0.17 ,-0.7 ,1.0 ,0.333)),
    (5, 8, Goto(0.38 ,-0.53 ,1.0 ,0.333)),
    (5, 10, Goto(0.18 ,-0.0 ,1.0 ,0.333)),
    (5, 9, Goto(0.58 ,-0.2 ,1.0 ,0.333)),
    (6, 0, Goto(0.58 ,0.35 ,1.0 ,0.333)),
    (6, 1, Goto(0.41 ,0.67 ,1.0 ,0.333)),
    (6, 2, Goto(0.2 ,0.9 ,1.0 ,0.333)),
    (6, 3, Goto(-0.04 ,0.67 ,1.0 ,0.333)),
    (6, 4, Goto(-0.24 ,0.33 ,1.0 ,0.333)),
    (6, 5, Goto(-0.24 ,-0.04 ,1.0 ,0.333)),
    (6, 6, Goto(-0.04 ,-0.38 ,1.0 ,0.333)),
    (6, 7, Goto(0.17 ,-0.55 ,1.0 ,0.333)),
    (6, 8, Goto(0.38 ,-0.38 ,1.0 ,0.333)),
    (6, 10, Goto(0.18 ,0.15 ,1.0 ,0.333)),
    (6, 9, Goto(0.58 ,-0.05 ,1.0 ,0.333)),
    (7, 0, Goto(0.58 ,0.2 ,1.0 ,0.333)),
    (7, 1, Goto(0.41 ,0.52 ,1.0 ,0.333)),
    (7, 2, Goto(0.2 ,0.75 ,1.0 ,0.333)),
    (7, 3, Goto(-0.04 ,0.52 ,1.0 ,0.333)),
    (7, 4, Goto(-0.24 ,0.18 ,1.0 ,0.333)),
    (7, 5, Goto(-0.24 ,-0.19 ,1.0 ,0.333)),
    (7, 6, Goto(-0.04 ,-0.53 ,1.0 ,0.333)),
    (7, 7, Goto(0.17 ,-0.7 ,1.0 ,0.333)),
    (7, 8, Goto(0.38 ,-0.53 ,1.0 ,0.333)),
    (7, 10, Goto(0.18 ,-0.0 ,1.0 ,0.333)),
    (7, 9, Goto(0.58 ,-0.2 ,1.0 ,0.333)),
    (8, 0, Goto(0.73 ,0.1 ,1.0 ,0.333)),
    (8, 1, Goto(0.57 ,0.4 ,1.0 ,0.333)),
    (8, 2, Goto(0.33 ,0.62 ,1.0 ,0.333)),
    (8, 3, Goto(-0.2 ,0.43 ,1.0 ,0.333)),
    (8, 4, Goto(-0.5 ,0.21 ,1.0 ,0.333)),
    (8, 5, Goto(-0.5 ,-0.16 ,1.0 ,0.333)),
    (8, 6, Goto(-0.2 ,-0.45 ,1.0 ,0.333)),
    (8, 7, Goto(0.1 ,-0.62 ,1.0 ,0.333)),
    (8, 8, Goto(0.38 ,-0.53 ,1.0 ,0.333)),
    (8, 10, Goto(0.1 ,0.17 ,1.0 ,0.333)),
    (8, 9, Goto(0.58 ,-0.2 ,1.0 ,0.333)),

    (9, 0,  Ring(255,255,255,1.0,0)),
    (9, 1,  Ring(0,0,255,1.0,0)),
    (9, 2,  Ring(0,0,255,1.0,0)),
    (9, 3,  Ring(0,0,255,1.0,0)),
    (9, 4,  Ring(0,0,255,1.0,0)),
    (9, 5,  Ring(0,0,255,1.0,0)),
    (9, 6,  Ring(0,0,255,1.0,0)),
    (9, 7,  Ring(0,0,255,1.0,0)),
    (9, 8,  Ring(0,0,255,1.0,0)),
    (9, 9,  Ring(0,0,255,1.0,0)),
    (9, 10, Ring(0,0,255,1.0,0)),
    
    (9, 0, Goto(0.55 ,-0.0 ,1.0 ,0.333)),
    (9, 1, Goto(0.75 ,0.3 ,1.0 ,0.333)),
    (9, 2, Goto(0.4 ,0.3 ,1.0 ,0.333)),
    (9, 3, Goto(-0.23 ,0.3 ,1.0 ,0.333)),
    (9, 4, Goto(-0.53 ,0.3 ,1.0 ,0.333)),
    (9, 5, Goto(-0.53 ,-0.3 ,1.0 ,0.333)),
    (9, 6, Goto(-0.23 ,-0.3 ,1.0 ,0.333)),
    (9, 7, Goto(0.08 ,-0.3 ,1.0 ,0.333)),
    (9, 8, Goto(0.4 ,-0.3 ,1.0 ,0.333)),
    (9, 10, Goto(0.05 ,0.3 ,1.0 ,0.333)),
    (9, 9, Goto(0.75 ,-0.3 ,1.0 ,0.333)),
    (10, 0, Goto(0.4 ,-0.0 ,1.0 ,0.333)),
    (10, 1, Goto(0.75 ,0.3 ,1.0 ,0.333)),
    (10, 2, Goto(0.4 ,0.3 ,1.0 ,0.333)),
    (10, 3, Goto(-0.23 ,0.3 ,1.0 ,0.333)),
    (10, 4, Goto(-0.53 ,0.47 ,1.0 ,0.333)),
    (10, 5, Goto(-0.53 ,-0.45 ,1.0 ,0.333)),
    (10, 6, Goto(-0.23 ,-0.3 ,1.0 ,0.333)),
    (10, 7, Goto(0.08 ,-0.3 ,1.0 ,0.333)),
    (10, 8, Goto(0.4 ,-0.3 ,1.0 ,0.333)),
    (10, 10, Goto(0.05 ,0.3 ,1.0 ,0.333)),
    (10, 9, Goto(0.75 ,-0.3 ,1.0 ,0.333)),
    (11, 0, Goto(0.23 ,-0.0 ,1.0 ,0.333)),
    (11, 1, Goto(0.75 ,0.3 ,1.0 ,0.333)),
    (11, 2, Goto(0.4 ,0.3 ,1.0 ,0.333)),
    (11, 3, Goto(-0.23 ,0.47 ,1.0 ,0.333)),
    (11, 4, Goto(-0.53 ,0.47 ,1.0 ,0.333)),
    (11, 5, Goto(-0.53 ,-0.45 ,1.0 ,0.333)),
    (11, 6, Goto(-0.23 ,-0.45 ,1.0 ,0.333)),
    (11, 7, Goto(0.08 ,-0.3 ,1.0 ,0.333)),
    (11, 8, Goto(0.4 ,-0.3 ,1.0 ,0.333)),
    (11, 10, Goto(0.05 ,0.3 ,1.0 ,0.333)),
    (11, 9, Goto(0.75 ,-0.3 ,1.0 ,0.333)),
    (12, 0, Goto(0.08 ,-0.0 ,1.0 ,0.333)),
    (12, 1, Goto(0.75 ,0.3 ,1.0 ,0.333)),
    (12, 2, Goto(0.4 ,0.3 ,1.0 ,0.333)),
    (12, 3, Goto(-0.23 ,0.35 ,1.0 ,0.333)),
    (12, 4, Goto(-0.53 ,0.47 ,1.0 ,0.333)),
    (12, 5, Goto(-0.53 ,-0.45 ,1.0 ,0.333)),
    (12, 6, Goto(-0.23 ,-0.33 ,1.0 ,0.333)),
    (12, 7, Goto(0.08 ,-0.45 ,1.0 ,0.333)),
    (12, 8, Goto(0.4 ,-0.3 ,1.0 ,0.333)),
    (12, 10, Goto(0.05 ,0.47 ,1.0 ,0.333)),
    (12, 9, Goto(0.75 ,-0.3 ,1.0 ,0.333)),
    (13, 0, Goto(-0.12 ,-0.0 ,1.0 ,0.333)),
    (13, 1, Goto(0.75 ,0.3 ,1.0 ,0.333)),
    (13, 2, Goto(0.4 ,0.47 ,1.0 ,0.333)),
    (13, 3, Goto(-0.23 ,0.47 ,1.0 ,0.333)),
    (13, 4, Goto(-0.53 ,0.47 ,1.0 ,0.333)),
    (13, 5, Goto(-0.53 ,-0.45 ,1.0 ,0.333)),
    (13, 6, Goto(-0.23 ,-0.45 ,1.0 ,0.333)),
    (13, 7, Goto(0.08 ,-0.45 ,1.0 ,0.333)),
    (13, 8, Goto(0.4 ,-0.45 ,1.0 ,0.333)),
    (13, 10, Goto(0.05 ,0.47 ,1.0 ,0.333)),
    (13, 9, Goto(0.75 ,-0.3 ,1.0 ,0.333)),
    (14, 0, Goto(-0.33 ,-0.0 ,1.0 ,0.333)),
    (14, 1, Goto(0.75 ,0.47 ,1.0 ,0.333)),
    (14, 2, Goto(0.4 ,0.62 ,1.0 ,0.333)),
    (14, 3, Goto(-0.25 ,0.62 ,1.0 ,0.333)),
    (14, 4, Goto(-0.53 ,0.47 ,1.0 ,0.333)),
    (14, 5, Goto(-0.53 ,-0.45 ,1.0 ,0.333)),
    (14, 6, Goto(-0.25 ,-0.62 ,1.0 ,0.333)),
    (14, 7, Goto(0.08 ,-0.45 ,1.0 ,0.333)),
    (14, 8, Goto(0.4 ,-0.6 ,1.0 ,0.333)),
    (14, 10, Goto(0.05 ,0.47 ,1.0 ,0.333)),
    (14, 9, Goto(0.75 ,-0.47 ,1.0 ,0.333)),
    (15, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (15, 1, Goto(0.75 ,0.6 ,1.0 ,0.333)),
    (15, 2, Goto(0.4 ,0.6 ,1.0 ,0.333)),
    (15, 3, Goto(-0.25 ,0.6 ,1.0 ,0.333)),
    (15, 4, Goto(-0.53 ,0.6 ,1.0 ,0.333)),
    (15, 5, Goto(-0.53 ,-0.6 ,1.0 ,0.333)),
    (15, 6, Goto(-0.25 ,-0.6 ,1.0 ,0.333)),
    (15, 7, Goto(0.08 ,-0.6 ,1.0 ,0.333)),
    (15, 8, Goto(0.4 ,-0.6 ,1.0 ,0.333)),
    (15, 10, Goto(0.05 ,0.6 ,1.0 ,0.333)),
    (15, 9, Goto(0.75 ,-0.6 ,1.0 ,0.333)),

    (16, 0,  Ring(255,0,0,1.0,0)),

    (16, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (16, 1, Goto(0.75 ,0.6 ,1.0 ,0.333)),
    (16, 2, Goto(0.4 ,0.43 ,1.0 ,0.333)),
    (16, 3, Goto(-0.25 ,0.8 ,1.0 ,0.333)),
    (16, 4, Goto(-0.53 ,0.6 ,1.0 ,0.333)),
    (16, 5, Goto(-0.53 ,-0.6 ,1.0 ,0.333)),
    (16, 6, Goto(-0.25 ,-0.4 ,1.0 ,0.333)),
    (16, 7, Goto(0.08 ,-0.6 ,1.0 ,0.333)),
    (16, 8, Goto(0.4 ,-0.78 ,1.0 ,0.333)),
    (16, 10, Goto(0.05 ,0.6 ,1.0 ,0.333)),
    (16, 9, Goto(0.75 ,-0.6 ,1.0 ,0.333)),

    (17, 0,  Ring(0,255,0,1.0,0)),

    (17, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (17, 1, Goto(0.75 ,0.6 ,1.0 ,0.333)),
    (17, 2, Goto(0.4 ,0.58 ,1.0 ,0.333)),
    (17, 3, Goto(-0.25 ,0.6 ,1.0 ,0.333)),
    (17, 4, Goto(-0.53 ,0.6 ,1.0 ,0.333)),
    (17, 5, Goto(-0.53 ,-0.6 ,1.0 ,0.333)),
    (17, 6, Goto(-0.25 ,-0.6 ,1.0 ,0.333)),
    (17, 7, Goto(0.08 ,-0.6 ,1.0 ,0.333)),
    (17, 8, Goto(0.4 ,-0.62 ,1.0 ,0.333)),
    (17, 10, Goto(0.05 ,0.6 ,1.0 ,0.333)),
    (17, 9, Goto(0.75 ,-0.6 ,1.0 ,0.333)),

    (18, 0,  Ring(0,0,255,1.0,0)),

    (18, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (18, 1, Goto(0.75 ,0.6 ,1.0 ,0.333)),
    (18, 2, Goto(0.4 ,0.78 ,1.0 ,0.333)),
    (18, 3, Goto(-0.25 ,0.43 ,1.0 ,0.333)),
    (18, 4, Goto(-0.53 ,0.6 ,1.0 ,0.333)),
    (18, 5, Goto(-0.53 ,-0.6 ,1.0 ,0.333)),
    (18, 6, Goto(-0.25 ,-0.78 ,1.0 ,0.333)),
    (18, 7, Goto(0.08 ,-0.6 ,1.0 ,0.333)),
    (18, 8, Goto(0.4 ,-0.43 ,1.0 ,0.333)),
    (18, 10, Goto(0.05 ,0.6 ,1.0 ,0.333)),
    (18, 9, Goto(0.75 ,-0.6 ,1.0 ,0.333)),

    (19, 0,  Ring(255,255,255,1.0,0)),

    (19, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (19, 1, Goto(0.75 ,0.6 ,1.0 ,0.333)),
    (19, 2, Goto(0.4 ,0.6 ,1.0 ,0.333)),
    (19, 3, Goto(-0.25 ,0.6 ,1.0 ,0.333)),
    (19, 4, Goto(-0.53 ,0.6 ,1.0 ,0.333)),
    (19, 5, Goto(-0.53 ,-0.6 ,1.0 ,0.333)),
    (19, 6, Goto(-0.25 ,-0.6 ,1.0 ,0.333)),
    (19, 7, Goto(0.08 ,-0.6 ,1.0 ,0.333)),
    (19, 8, Goto(0.4 ,-0.6 ,1.0 ,0.333)),
    (19, 10, Goto(0.05 ,0.6 ,1.0 ,0.333)),
    (19, 9, Goto(0.75 ,-0.6 ,1.0 ,0.333)),

    (20, 1,  Ring(159,39,176,1.0,0)),
    (20, 2,  Ring(255,193,7,1.0,0)),
    (20, 3,  Ring(255,193,7,1.0,0)),
    (20, 4,  Ring(159,39,176,1.0,0)),
    (20, 5,  Ring(159,39,176,1.0,0)),
    (20, 6,  Ring(255,193,7,1.0,0)),
    (20, 7,  Ring(159,39,176,1.0,0)),
    (20, 8,  Ring(255,193,7,1.0,0)),
    (20, 9,  Ring(159,39,176,1.0,0)),
    (20, 10, Ring(159,39,176,1.0,0)),

    (20, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (20, 1, Goto(0.75 ,0.45 ,1.0 ,0.333)),
    (20, 2, Goto(0.4 ,0.82 ,1.0 ,0.333)),
    (20, 3, Goto(-0.25 ,0.82 ,1.0 ,0.333)),
    (20, 4, Goto(-0.43 ,0.35 ,1.0 ,0.333)),
    (20, 5, Goto(-0.4 ,-0.35 ,1.0 ,0.333)),
    (20, 6, Goto(-0.25 ,-0.85 ,1.0 ,0.333)),
    (20, 7, Goto(0.08 ,-0.45 ,1.0 ,0.333)),
    (20, 8, Goto(0.4 ,-0.85 ,1.0 ,0.333)),
    (20, 10, Goto(0.05 ,0.47 ,1.0 ,0.333)),
    (20, 9, Goto(0.78 ,-0.45 ,1.0 ,0.333)),

    (21, 1,  Ring(0,0,255,1.0,0)),
    (21, 2,  Ring(0,0,255,1.0,0)),
    (21, 3,  Ring(0,0,255,1.0,0)),
    (21, 4,  Ring(0,0,255,1.0,0)),
    (21, 5,  Ring(0,0,255,1.0,0)),
    (21, 6,  Ring(0,0,255,1.0,0)),
    (21, 7,  Ring(0,0,255,1.0,0)),
    (21, 8,  Ring(0,0,255,1.0,0)),
    (21, 9,  Ring(0,0,255,1.0,0)),
    (21, 10, Ring(0,0,255,1.0,0)),

    (21, 0, Goto(-0.6 ,-0.0 ,1.0 ,0.333)),
    (21, 1, Goto(0.4 ,0.47 ,1.0 ,0.333)),
    (21, 2, Goto(0.03 ,0.93 ,1.0 ,0.333)),
    (21, 3, Goto(-0.4 ,0.75 ,1.0 ,0.333)),
    (21, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (21, 5, Goto(-0.38 ,-0.23 ,1.0 ,0.333)),
    (21, 6, Goto(-0.43 ,-0.8 ,1.0 ,0.333)),
    (21, 7, Goto(-0.05 ,-0.38 ,1.0 ,0.333)),
    (21, 8, Goto(0.03 ,-0.95 ,1.0 ,0.333)),
    (21, 10, Goto(-0.05 ,0.38 ,1.0 ,0.333)),
    (21, 9, Goto(0.43 ,-0.47 ,1.0 ,0.333)),
    (22, 0, Goto(-0.6 ,-0.0 ,1.0 ,0.333)),
    (22, 1, Goto(0.45 ,0.6 ,1.0 ,0.333)),
    (22, 2, Goto(-0.1 ,0.93 ,1.0 ,0.333)),
    (22, 3, Goto(-0.4 ,0.75 ,1.0 ,0.333)),
    (22, 4, Goto(-0.3 ,0.2 ,1.0 ,0.333)),
    (22, 5, Goto(-0.3 ,-0.17 ,1.0 ,0.333)),
    (22, 6, Goto(-0.38 ,-0.75 ,1.0 ,0.333)),
    (22, 7, Goto(0.08 ,-0.38 ,1.0 ,0.333)),
    (22, 8, Goto(-0.1 ,-0.93 ,1.0 ,0.333)),
    (22, 10, Goto(0.05 ,0.38 ,1.0 ,0.333)),
    (22, 9, Goto(0.45 ,-0.57 ,1.0 ,0.333)),
    (23, 0, Goto(-0.6 ,-0.0 ,1.0 ,0.333)),
    (23, 1, Goto(0.45 ,0.6 ,1.0 ,0.333)),
    (23, 2, Goto(-0.25 ,0.93 ,1.0 ,0.333)),
    (23, 3, Goto(-0.53 ,0.75 ,1.0 ,0.333)),
    (23, 4, Goto(-0.3 ,0.2 ,1.0 ,0.333)),
    (23, 5, Goto(-0.3 ,-0.17 ,1.0 ,0.333)),
    (23, 6, Goto(-0.49 ,-0.75 ,1.0 ,0.333)),
    (23, 7, Goto(0.08 ,-0.38 ,1.0 ,0.333)),
    (23, 8, Goto(-0.25 ,-0.93 ,1.0 ,0.333)),
    (23, 10, Goto(0.05 ,0.38 ,1.0 ,0.333)),
    (23, 9, Goto(0.45 ,-0.57 ,1.0 ,0.333)),
    (24, 0, Goto(-0.6 ,-0.0 ,1.0 ,0.333)),
    (24, 1, Goto(0.45 ,0.6 ,1.0 ,0.333)),
    (24, 2, Goto(-0.36 ,0.93 ,1.0 ,0.333)),
    (24, 3, Goto(-0.66 ,0.75 ,1.0 ,0.333)),
    (24, 4, Goto(-0.3 ,0.2 ,1.0 ,0.333)),
    (24, 5, Goto(-0.3 ,-0.17 ,1.0 ,0.333)),
    (24, 6, Goto(-0.63 ,-0.75 ,1.0 ,0.333)),
    (24, 7, Goto(0.08 ,-0.38 ,1.0 ,0.333)),
    (24, 8, Goto(-0.36 ,-0.93 ,1.0 ,0.333)),
    (24, 10, Goto(0.05 ,0.38 ,1.0 ,0.333)),
    (24, 9, Goto(0.45 ,-0.57 ,1.0 ,0.333)),
    (25, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (25, 1, Goto(0.33 ,0.6 ,1.0 ,0.333)),
    (25, 2, Goto(-0.34 ,0.85 ,1.0 ,0.333)),
    (25, 3, Goto(-0.61 ,0.6 ,1.0 ,0.333)),
    (25, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (25, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (25, 6, Goto(-0.65 ,-0.64 ,1.0 ,0.333)),
    (25, 7, Goto(-0.02 ,-0.38 ,1.0 ,0.333)),
    (25, 8, Goto(-0.35 ,-0.81 ,1.0 ,0.333)),
    (25, 10, Goto(-0.05 ,0.43 ,1.0 ,0.333)),
    (25, 9, Goto(0.33 ,-0.57 ,1.0 ,0.333)),
    (26, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (26, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (26, 2, Goto(-0.34 ,0.95 ,1.0 ,0.333)),
    (26, 3, Goto(-0.61 ,0.7 ,1.0 ,0.333)),
    (26, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (26, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (26, 6, Goto(-0.65 ,-0.76 ,1.0 ,0.333)),
    (26, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (26, 8, Goto(-0.35 ,-0.94 ,1.0 ,0.333)),
    (26, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (26, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),
    (27, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (27, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (27, 2, Goto(-0.34 ,0.95 ,1.0 ,0.333)),
    (27, 3, Goto(-0.61 ,0.7 ,1.0 ,0.333)),
    (27, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (27, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (27, 6, Goto(-0.65 ,-0.76 ,1.0 ,0.333)),
    (27, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (27, 8, Goto(-0.35 ,-0.94 ,1.0 ,0.333)),
    (27, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (27, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),
    (28, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (28, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (28, 2, Goto(-0.11 ,0.95 ,1.0 ,0.333)),
    (28, 3, Goto(-0.39 ,0.7 ,1.0 ,0.333)),
    (28, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (28, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (28, 6, Goto(-0.38 ,-0.67 ,1.0 ,0.333)),
    (28, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (28, 8, Goto(-0.12 ,-0.93 ,1.0 ,0.333)),
    (28, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (28, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),
    (29, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (29, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (29, 2, Goto(-0.11 ,0.78 ,1.0 ,0.333)),
    (29, 3, Goto(-0.39 ,0.53 ,1.0 ,0.333)),
    (29, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (29, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (29, 6, Goto(-0.38 ,-0.49 ,1.0 ,0.333)),
    (29, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (29, 8, Goto(-0.12 ,-0.76 ,1.0 ,0.333)),
    (29, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (29, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),
    (30, 0, Goto(-0.5 ,-0.0 ,1.0 ,0.333)),
    (30, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (30, 2, Goto(-0.11 ,0.78 ,1.0 ,0.333)),
    (30, 3, Goto(-0.39 ,0.53 ,1.0 ,0.333)),
    (30, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (30, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (30, 6, Goto(-0.38 ,-0.49 ,1.0 ,0.333)),
    (30, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (30, 8, Goto(-0.12 ,-0.76 ,1.0 ,0.333)),
    (30, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (30, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),


    (31, 0,  Ring(255,255,255,1.0,0)),
    (31, 1,  Ring(255,255,255,1.0,0)),
    (31, 2,  Ring(255,255,255,1.0,0)),
    (31, 3,  Ring(255,255,255,1.0,0)),
    (31, 4,  Ring(255,255,255,1.0,0)),
    (31, 5,  Ring(255,255,255,1.0,0)),
    (31, 6,  Ring(255,255,255,1.0,0)),
    (31, 7,  Ring(255,255,255,1.0,0)),
    (31, 8,  Ring(255,255,255,1.0,0)),
    (31, 9,  Ring(255,255,255,1.0,0)),
    (31, 10, Ring(255,255,255,1.0,0)),

    (31, 0, Goto(-0.62 ,-0.17 ,1.0 ,0.333)),
    (31, 1, Goto(0.2 ,0.61 ,1.0 ,0.333)),
    (31, 2, Goto(-0.11 ,0.78 ,1.0 ,0.333)),
    (31, 3, Goto(-0.39 ,0.53 ,1.0 ,0.333)),
    (31, 4, Goto(-0.38 ,0.23 ,1.0 ,0.333)),
    (31, 5, Goto(-0.38 ,-0.2 ,1.0 ,0.333)),
    (31, 6, Goto(-0.38 ,-0.49 ,1.0 ,0.333)),
    (31, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (31, 8, Goto(-0.12 ,-0.76 ,1.0 ,0.333)),
    (31, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (31, 9, Goto(0.2 ,-0.56 ,1.0 ,0.333)),
    (32, 0, Goto(-0.62 ,-0.17 ,1.0 ,0.333)),
    (32, 1, Goto(0.28 ,0.38 ,1.0 ,0.333)),
    (32, 2, Goto(0.1 ,0.88 ,1.0 ,0.333)),
    (32, 3, Goto(-0.6 ,0.62 ,1.0 ,0.333)),
    (32, 4, Goto(-0.38 ,0.38 ,1.0 ,0.333)),
    (32, 5, Goto(-0.38 ,-0.35 ,1.0 ,0.333)),
    (32, 6, Goto(-0.6 ,-0.6 ,1.0 ,0.333)),
    (32, 7, Goto(-0.05 ,-0.25 ,1.0 ,0.333)),
    (32, 8, Goto(0.1 ,-0.85 ,1.0 ,0.333)),
    (32, 10, Goto(-0.05 ,0.3 ,1.0 ,0.333)),
    (32, 9, Goto(0.3 ,-0.25 ,1.0 ,0.333)),
    (33, 0, Goto(-0.55 ,-0.4 ,1.0 ,0.333)),
    (33, 1, Goto(0.1 ,0.23 ,1.0 ,0.333)),
    (33, 2, Goto(0.4 ,0.65 ,1.0 ,0.333)),
    (33, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (33, 4, Goto(-0.45 ,0.55 ,1.0 ,0.333)),
    (33, 5, Goto(-0.28 ,-0.35 ,1.0 ,0.333)),
    (33, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (33, 7, Goto(0.0 ,-0.15 ,1.0 ,0.333)),
    (33, 8, Goto(0.4 ,-0.53 ,1.0 ,0.333)),
    (33, 10, Goto(-0.2 ,0.45 ,1.0 ,0.333)),
    (33, 9, Goto(0.23 ,-0.08 ,1.0 ,0.333)),
    (34, 0, Goto(-0.45 ,-0.47 ,1.0 ,0.333)),
    (34, 1, Goto(0.17 ,0.28 ,1.0 ,0.333)),
    (34, 2, Goto(0.55 ,0.55 ,1.0 ,0.333)),
    (34, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (34, 4, Goto(-0.45 ,0.55 ,1.0 ,0.333)),
    (34, 5, Goto(-0.17 ,-0.35 ,1.0 ,0.333)),
    (34, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (34, 7, Goto(0.15 ,-0.12 ,1.0 ,0.333)),
    (34, 8, Goto(0.53 ,-0.53 ,1.0 ,0.333)),
    (34, 10, Goto(-0.2 ,0.45 ,1.0 ,0.333)),
    (34, 9, Goto(0.3 ,0.08 ,1.0 ,0.333)),
    (35, 0, Goto(-0.35 ,-0.53 ,1.0 ,0.333)),
    (35, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (35, 2, Goto(0.6 ,0.62 ,1.0 ,0.333)),
    (35, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (35, 4, Goto(-0.38 ,0.62 ,1.0 ,0.333)),
    (35, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (35, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (35, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (35, 8, Goto(0.62 ,-0.62 ,1.0 ,0.333)),
    (35, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (35, 9, Goto(0.22 ,-0.0 ,1.0 ,0.333)),
    (36, 0, Goto(-0.35 ,-0.53 ,1.0 ,0.333)),
    (36, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (36, 2, Goto(0.6 ,0.62 ,1.0 ,0.333)),
    (36, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (36, 4, Goto(-0.38 ,0.62 ,1.0 ,0.333)),
    (36, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (36, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (36, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (36, 8, Goto(0.62 ,-0.62 ,1.0 ,0.333)),
    (36, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (36, 9, Goto(0.22 ,-0.0 ,1.0 ,0.333)),
    (37, 0, Goto(-0.35 ,-0.53 ,1.0 ,0.333)),
    (37, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (37, 2, Goto(0.6 ,0.62 ,1.0 ,0.333)),
    (37, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (37, 4, Goto(-0.38 ,0.62 ,1.0 ,0.333)),
    (37, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (37, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (37, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (37, 8, Goto(0.62 ,-0.62 ,1.0 ,0.333)),
    (37, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (37, 9, Goto(0.22 ,-0.0 ,1.0 ,0.333)),
    (38, 0, Goto(-0.35 ,-0.53 ,1.0 ,0.333)),
    (38, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (38, 2, Goto(0.6 ,0.62 ,1.0 ,0.333)),
    (38, 3, Goto(-0.75 ,0.73 ,1.0 ,0.333)),
    (38, 4, Goto(-0.38 ,0.62 ,1.0 ,0.333)),
    (38, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (38, 6, Goto(-0.75 ,-0.6 ,1.0 ,0.333)),
    (38, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (38, 8, Goto(0.62 ,-0.62 ,1.0 ,0.333)),
    (38, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (38, 9, Goto(-0.05 ,-0.0 ,1.0 ,0.333)),
    (39, 0, Goto(-0.53 ,-0.43 ,1.0 ,0.333)),
    (39, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (39, 2, Goto(0.45 ,0.43 ,1.0 ,0.333)),
    (39, 3, Goto(-0.73 ,0.57 ,1.0 ,0.333)),
    (39, 4, Goto(-0.47 ,0.53 ,1.0 ,0.333)),
    (39, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (39, 6, Goto(-0.75 ,-0.53 ,1.0 ,0.333)),
    (39, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (39, 8, Goto(0.45 ,-0.4 ,1.0 ,0.333)),
    (39, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (39, 9, Goto(-0.05 ,-0.0 ,1.0 ,0.333)),
    (40, 0, Goto(-0.47 ,-0.38 ,1.0 ,0.333)),
    (40, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (40, 2, Goto(0.45 ,0.25 ,1.0 ,0.333)),
    (40, 3, Goto(-0.75 ,0.45 ,1.0 ,0.333)),
    (40, 4, Goto(-0.47 ,0.45 ,1.0 ,0.333)),
    (40, 5, Goto(-0.25 ,-0.38 ,1.0 ,0.333)),
    (40, 6, Goto(-0.73 ,-0.38 ,1.0 ,0.333)),
    (40, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (40, 8, Goto(0.45 ,-0.23 ,1.0 ,0.333)),
    (40, 10, Goto(-0.25 ,0.45 ,1.0 ,0.333)),
    (40, 9, Goto(-0.3 ,-0.0 ,1.0 ,0.333)),
    (41, 0, Goto(-0.47 ,-0.25 ,1.0 ,0.333)),
    (41, 1, Goto(0.09 ,0.2 ,1.0 ,0.333)),
    (41, 2, Goto(0.45 ,0.25 ,1.0 ,0.333)),
    (41, 3, Goto(-0.73 ,0.3 ,1.0 ,0.333)),
    (41, 4, Goto(-0.46 ,0.3 ,1.0 ,0.333)),
    (41, 5, Goto(-0.24 ,-0.25 ,1.0 ,0.333)),
    (41, 6, Goto(-0.72 ,-0.25 ,1.0 ,0.333)),
    (41, 7, Goto(0.07 ,-0.2 ,1.0 ,0.333)),
    (41, 8, Goto(0.45 ,-0.23 ,1.0 ,0.333)),
    (41, 10, Goto(-0.23 ,0.3 ,1.0 ,0.333)),
    (41, 9, Goto(-0.7 ,0.03 ,1.0 ,0.333)),
    (42, 0, Goto(-0.43 ,-0.12 ,1.0 ,0.333)),
    (42, 1, Goto(0.43 ,0.17 ,1.0 ,0.333)),
    (42, 2, Goto(0.82 ,0.17 ,1.0 ,0.333)),
    (42, 3, Goto(-0.62 ,0.17 ,1.0 ,0.333)),
    (42, 4, Goto(-0.3 ,0.15 ,1.0 ,0.333)),
    (42, 5, Goto(-0.12 ,-0.12 ,1.0 ,0.333)),
    (42, 6, Goto(-0.7 ,-0.17 ,1.0 ,0.333)),
    (42, 7, Goto(0.2 ,-0.12 ,1.0 ,0.333)),
    (42, 8, Goto(0.6 ,-0.15 ,1.0 ,0.333)),
    (42, 10, Goto(0.05 ,0.17 ,1.0 ,0.333)),
    (42, 9, Goto(-0.95 ,0.03 ,1.0 ,0.333)),

    (31, 0,  Ring(255,152,0,1.0,0)),
    (31, 1,  Ring(255,152,0,1.0,0)),
    (31, 2,  Ring(255,152,0,1.0,0)),
    (31, 3,  Ring(255,152,0,1.0,0)),
    (31, 4,  Ring(255,152,0,1.0,0)),
    (31, 5,  Ring(255,152,0,1.0,0)),
    (31, 6,  Ring(255,152,0,1.0,0)),
    (31, 7,  Ring(255,152,0,1.0,0)),
    (31, 8,  Ring(255,152,0,1.0,0)),
    (31, 9,  Ring(255,152,0,1.0,0)),
    (31, 10, Ring(255,152,0,1.0,0)),
    
    (43, 0, Goto(-0.4 ,-0.0 ,1.0 ,0.333)),
    (43, 1, Goto(0.57 ,-0.0 ,1.0 ,0.333)),
    (43, 2, Goto(0.98 ,-0.0 ,1.0 ,0.333)),
    (43, 3, Goto(-0.57 ,-0.0 ,1.0 ,0.333)),
    (43, 4, Goto(-0.23 ,-0.0 ,1.0 ,0.333)),
    (43, 5, Goto(-0.03 ,-0.0 ,1.0 ,0.333)),
    (43, 6, Goto(-0.78 ,-0.0 ,1.0 ,0.333)),
    (43, 7, Goto(0.38 ,-0.0 ,1.0 ,0.333)),
    (43, 8, Goto(0.78 ,-0.0 ,1.0 ,0.333)),
    (43, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (43, 9, Goto(-0.98 ,-0.0 ,1.0 ,0.333)),
    
    (44, 0, Goto(-0.4 ,-0.0 ,1.0 ,0.333)),
    (44, 1, Goto(0.57 ,-0.0 ,1.0 ,0.333)),
    (44, 2, Goto(0.98 ,-0.0 ,1.0 ,0.333)),
    (44, 3, Goto(-0.57 ,-0.0 ,1.0 ,0.333)),
    (44, 4, Goto(-0.23 ,-0.0 ,1.0 ,0.333)),
    (44, 5, Goto(-0.03 ,-0.0 ,1.0 ,0.333)),
    (44, 6, Goto(-0.78 ,-0.0 ,1.0 ,0.333)),
    (44, 7, Goto(0.38 ,-0.0 ,1.0 ,0.333)),
    (44, 8, Goto(0.78 ,-0.0 ,1.0 ,0.333)),
    (44, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (44, 9, Goto(-0.98 ,-0.0 ,1.0 ,0.333)),
]

sequence_last=[
    (0, 0, Ring(0, 0, 0, 0, 0)),
    (0, 1, Ring(0, 0, 0, 0, 0)),
    (0, 2, Ring(0, 0, 0, 0, 0)),
    (0, 3, Ring(0, 0, 0, 0, 0)),
    (0, 4, Ring(0, 0, 0, 0, 0)),
    (0, 5, Ring(0, 0, 0, 0, 0)),
    (0, 6, Ring(0, 0, 0, 0, 0)),
    (0, 7, Ring(0, 0, 0, 0, 0)),
    (0, 8, Ring(0, 0, 0, 0, 0)),
    (0, 9, Ring(0, 0, 0, 0, 0)),
    (0, 10, Ring(0, 0, 0, 0, 0)),
    (0, 0, Goto(-0.4 ,-0.0 ,1.0 ,0.333)),
    (0, 1, Goto(0.57 ,-0.0 ,1.0 ,0.333)),
    (0, 2, Goto(0.98 ,-0.0 ,1.0 ,0.333)),
    (0, 3, Goto(-0.57 ,-0.0 ,1.0 ,0.333)),
    (0, 4, Goto(-0.23 ,-0.0 ,1.0 ,0.333)),
    (0, 5, Goto(-0.03 ,-0.0 ,1.0 ,0.333)),
    (0, 6, Goto(-0.78 ,-0.0 ,1.0 ,0.333)),
    (0, 7, Goto(0.38 ,-0.0 ,1.0 ,0.333)),
    (0, 8, Goto(0.78 ,-0.0 ,1.0 ,0.333)),
    (0, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (0, 9, Goto(-0.98 ,-0.0 ,1.0 ,0.333)),
    (1, 0, Goto(-0.4 ,-0.0 ,1.0 ,0.333)),
    (1, 1, Goto(0.6 ,0.15 ,1.0 ,0.333)),
    (1, 2, Goto(0.98 ,0.38 ,1.0 ,0.333)),
    (1, 3, Goto(-0.57 ,0.35 ,1.0 ,0.333)),
    (1, 4, Goto(-0.2 ,0.25 ,1.0 ,0.333)),
    (1, 5, Goto(-0.03 ,-0.0 ,1.0 ,0.333)),
    (1, 6, Goto(-0.78 ,-0.0 ,1.0 ,0.333)),
    (1, 7, Goto(0.35 ,-0.33 ,1.0 ,0.333)),
    (1, 8, Goto(0.75 ,-0.35 ,1.0 ,0.333)),
    (1, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (1, 9, Goto(-0.98 ,-0.4 ,1.0 ,0.333)),
    (2, 0, Goto(-0.4 ,-0.0 ,1.0 ,0.333)),
    (2, 1, Goto(0.43 ,0.28 ,1.0 ,0.333)),
    (2, 2, Goto(0.7 ,0.62 ,1.0 ,0.333)),
    (2, 3, Goto(-0.57 ,0.35 ,1.0 ,0.333)),
    (2, 4, Goto(-0.35 ,0.6 ,1.0 ,0.333)),
    (2, 5, Goto(-0.15 ,-0.03 ,1.0 ,0.333)),
    (2, 6, Goto(-0.5 ,-0.43 ,1.0 ,0.333)),
    (2, 7, Goto(0.05 ,-0.47 ,1.0 ,0.333)),
    (2, 8, Goto(0.47 ,-0.65 ,1.0 ,0.333)),
    (2, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (2, 9, Goto(-0.98 ,-0.4 ,1.0 ,0.333)),
    (3, 0, Goto(-0.33 ,0.28 ,1.0 ,0.333)),
    (3, 1, Goto(0.43 ,0.28 ,1.0 ,0.333)),
    (3, 2, Goto(-0.02 ,0.73 ,1.0 ,0.333)),
    (3, 3, Goto(-0.57 ,0.35 ,1.0 ,0.333)),
    (3, 4, Goto(-0.35 ,0.6 ,1.0 ,0.333)),
    (3, 5, Goto(-0.15 ,-0.0 ,1.0 ,0.333)),
    (3, 6, Goto(-0.4 ,-0.6 ,1.0 ,0.333)),
    (3, 7, Goto(-0.02 ,-0.8 ,1.0 ,0.333)),
    (3, 8, Goto(0.47 ,-0.65 ,1.0 ,0.333)),
    (3, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (3, 9, Goto(-0.38 ,-0.33 ,1.0 ,0.333)),
    (4, 0, Goto(0.08 ,0.28 ,1.0 ,0.333)),
    (4, 1, Goto(0.25 ,0.57 ,1.0 ,0.333)),
    (4, 2, Goto(-0.02 ,0.73 ,1.0 ,0.333)),
    (4, 3, Goto(-0.57 ,0.35 ,1.0 ,0.333)),
    (4, 4, Goto(-0.35 ,0.6 ,1.0 ,0.333)),
    (4, 5, Goto(-0.55 ,-0.0 ,1.0 ,0.333)),
    (4, 6, Goto(-0.4 ,-0.6 ,1.0 ,0.333)),
    (4, 7, Goto(-0.02 ,-0.8 ,1.0 ,0.333)),
    (4, 8, Goto(0.47 ,-0.65 ,1.0 ,0.333)),
    (4, 10, Goto(0.17 ,-0.0 ,1.0 ,0.333)),
    (4, 9, Goto(0.1 ,-0.3 ,1.0 ,0.333)),
    (5, 0, Goto(0.55 ,0.25 ,1.0 ,0.333)),
    (5, 1, Goto(0.25 ,0.57 ,1.0 ,0.333)),
    (5, 2, Goto(-0.02 ,0.73 ,1.0 ,0.333)),
    (5, 3, Goto(-0.57 ,0.28 ,1.0 ,0.333)),
    (5, 4, Goto(-0.35 ,0.47 ,1.0 ,0.333)),
    (5, 5, Goto(-0.57 ,-0.23 ,1.0 ,0.333)),
    (5, 6, Goto(-0.3 ,-0.6 ,1.0 ,0.333)),
    (5, 7, Goto(-0.02 ,-0.8 ,1.0 ,0.333)),
    (5, 8, Goto(0.28 ,-0.65 ,1.0 ,0.333)),
    (5, 10, Goto(-0.03 ,-0.0 ,1.0 ,0.333)),
    (5, 9, Goto(0.55 ,-0.3 ,1.0 ,0.333)),

]


def wait_for_position_estimator(scf):
    print('Waiting for estimator to find position...')

    log_config = LogConfig(name='Kalman Variance', period_in_ms=500)
    log_config.add_variable('kalman.varPX', 'float')
    log_config.add_variable('kalman.varPY', 'float')
    log_config.add_variable('kalman.varPZ', 'float')

    var_y_history = [1000] * 10
    var_x_history = [1000] * 10
    var_z_history = [1000] * 10

    threshold = 0.001

    with SyncLogger(scf, log_config) as logger:
        for log_entry in logger:
            data = log_entry[1]

            var_x_history.append(data['kalman.varPX'])
            var_x_history.pop(0)
            var_y_history.append(data['kalman.varPY'])
            var_y_history.pop(0)
            var_z_history.append(data['kalman.varPZ'])
            var_z_history.pop(0)

            min_x = min(var_x_history)
            max_x = max(var_x_history)
            min_y = min(var_y_history)
            max_y = max(var_y_history)
            min_z = min(var_z_history)
            max_z = max(var_z_history)

            # print("{} {} {}".
            #       format(max_x - min_x, max_y - min_y, max_z - min_z))

            if (max_x - min_x) < threshold and (
                    max_y - min_y) < threshold and (
                    max_z - min_z) < threshold:
                break


def reset_estimator(scf):
    cf = scf.cf
    cf.param.set_value('kalman.resetEstimation', '1')
    time.sleep(0.1)
    cf.param.set_value('kalman.resetEstimation', '0')
    wait_for_position_estimator(scf)


def activate_high_level_commander(scf):
    scf.cf.param.set_value('commander.enHighLevel', '1')


def activate_mellinger_controller(scf, use_mellinger):
    controller = 1
    if use_mellinger:
        controller = 2
    scf.cf.param.set_value('stabilizer.controller', str(controller))


def set_ring_color(cf, r, g, b, intensity, time):
    cf.param.set_value('ring.fadeTime', str(time))

    r *= intensity
    g *= intensity
    b *= intensity

    color = (int(r) << 16) | (int(g) << 8) | int(b)

    cf.param.set_value('ring.fadeColor', str(color))


def crazyflie_control(scf):
    cf = scf.cf
    control = controlQueues[uris.index(cf.link_uri)]

    activate_mellinger_controller(scf, False)

    commander = scf.cf.high_level_commander

    # Set fade to color effect and reset to Led-ring OFF
    set_ring_color(cf, 0, 0, 0, 0, 0)
    cf.param.set_value('ring.effect', '14')

    while True:
        command = control.get()
        if type(command) is Quit:
            return
        elif type(command) is Takeoff:
            commander.takeoff(command.height, command.time)
        elif type(command) is Land:
            commander.land(0.0, command.time)
        elif type(command) is Goto:
            commander.go_to(command.x, command.y, command.z, 0, command.time)
        elif type(command) is Ring:
            set_ring_color(cf, command.r, command.g, command.b,
                           command.intensity, command.time)
            pass
        else:
            print('Warning! unknown command {} for uri {}'.format(command,
                                                                  cf.uri))



def control_thread():
    sequence_stop = False
    cur_sequence = sequence_init
    while not sequence_stop:
        key_input=input('sequence what you want :')
        if key_input == 'q': 
            sequence_stop = True
            break;

        else:
            if(key_input == 'init'):
                cur_sequence = sequence_init
            elif(key_input == 'led'):
                cur_sequence = sequence_ledtest
            elif(key_input == 'takeoff'):
                cur_sequence = sequence_takeoff
            elif(key_input == 'land'):
                cur_sequence = sequence_land
            elif(key_input == 'start'):
                cur_sequence = sequence_start
            elif(key_input == 'dance'):
                cur_sequence = sequence_dance
            elif(key_input == 'end'):
                cur_sequence = sequence_last

            

            pointer = 0
            step = 0
            stop = False
            while not stop:
                print('Step {}:'.format(step))
                while cur_sequence[pointer][0] <= step:
                    cf_id = cur_sequence[pointer][1]
                    command = cur_sequence[pointer][2]
                    print(' - Running: {} on {}'.format(command, cf_id))
                    controlQueues[cf_id].put(command)
                    pointer += 1
                    if pointer >= len(cur_sequence):
                        print('Reaching the end of the cur_sequence, stopping!')
                        stop = True
                        break
                    
                step += 1
                time.sleep(STEP_TIME)
       
    for ctrl in controlQueues:
        ctrl.put(Quit())


if __name__ == '__main__':
    controlQueues = [Queue() for _ in range(len(uris))]

    cflib.crtp.init_drivers()
    factory = CachedCfFactory(rw_cache='./cache')

    
    with Swarm(uris, factory=factory) as swarm:
        swarm.parallel_safe(activate_high_level_commander)
        swarm.parallel_safe(reset_estimator)
        print('Starting sequence!')
        threading.Thread(target=control_thread).start()
        swarm.parallel_safe(crazyflie_control)
        time.sleep(1)
        

